@page "/Charts"

@using Syncfusion.Blazor.Charts
@inject ISalesOrderReportService SalesOrderReportService

<h3>Charts</h3>

<div class="mt-3">
  <SfChart Title="Sales Gross / Month">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
    <ChartSeriesCollection>
      <ChartSeries DataSource="GrossSalesPricePerMonthData"
                   XName="GroupedFieldKey"
                   YName="Price"
                   Type="ChartSeriesType.Bar">
      </ChartSeries>
    </ChartSeriesCollection>
  </SfChart>
</div>
<div class="mt-3">
  <SfAccumulationChart Title="Qty / Product Category">
    <AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Top"></AccumulationChartLegendSettings>
    <AccumulationChartTooltipSettings Enable=true></AccumulationChartTooltipSettings>
    <AccumulationChartSeriesCollection>
      <AccumulationChartSeries DataSource="QtyPerProductCatData"
                               XName="GroupedFieldKey"
                               YName="Qty"
                               Radius="70%"
                               InnerRadius="40%"
                               Name="QtyPerProductCategory"
                               Explode="true"
                               ExplodeOffset="10%"
                               ExplodeIndex="3">
        <AccumulationDataLabelSettings Visible="true" Name="Label">
          <AccumulationChartDataLabelFont FontWeight="600" Color="White"></AccumulationChartDataLabelFont>
        </AccumulationDataLabelSettings>
      </AccumulationChartSeries>
    </AccumulationChartSeriesCollection>
  </SfAccumulationChart>
</div>
<div class="mt-3">
  <SfChart Title="Qty / Month">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
    <ChartSeriesCollection>
      <ChartSeries DataSource="QtyPerMonthData"
                   XName="GroupedFieldKey"
                   YName="Qty"
                   Type="ChartSeriesType.Line">
      </ChartSeries>
    </ChartSeriesCollection>
  </SfChart>
</div>

@code {
  private List<GroupedFieldPriceModel> GrossSalesPricePerMonthData { get; set; }
  private List<GroupedFieldQtyModel> QtyPerProductCatData { get; set; }
  private List<GroupedFieldQtyModel> QtyPerMonthData { get; set; }

  protected async override Task OnInitializedAsync ()
  {
    GrossSalesPricePerMonthData = await SalesOrderReportService.GetEmployeePricePerMonthData ();
    QtyPerProductCatData = await SalesOrderReportService.GetQtyPerProductCategory ();
    QtyPerMonthData = await SalesOrderReportService.GetQtyPerMonthData ();
  }
}
